name: Build and Deploy Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual trigger
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job 1: Generate CV (only if CV-related files changed)
  generate-cv:
    runs-on: ubuntu-latest
    # Check if CV-related files were modified
    if: >
      contains(github.event.head_commit.message, 'content.json') ||
      contains(github.event.head_commit.message, 'cv-professional.html') ||
      contains(github.event.head_commit.message, 'generate_professional_cv.py') ||
      github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libpango-1.0-0 \
          libharfbuzz0b \
          libpangoft2-1.0-0 \
          libfontconfig1 \
          libcairo2 \
          libgdk-pixbuf2.0-0 \
          shared-mime-info
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Generate CV
      run: python generate_professional_cv.py
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add static/eugene_chekan_software_engineer_in_test_cv.pdf cv_preview.html
        
        if ! git diff --staged --quiet; then
          git commit -m "Auto-generate CV PDF [skip ci]"
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job 2: Build and deploy pages (always runs, but waits for CV generation)
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [generate-cv]
    # Run after CV generation completes OR if it was skipped
    if: always() && (needs.generate-cv.result == 'success' || needs.generate-cv.result == 'skipped')
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository (latest)
      uses: actions/checkout@v4
      with:
        ref: main  # Get the latest version including any CV updates
    
    - name: Setup Pages
      uses: actions/configure-pages@v5
    
    - name: Build with Jekyll
      uses: actions/jekyll-build-pages@v1
      with:
        source: ./
        destination: ./_site
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
